// <auto-generated />
using System;
using Ctrl.EntityFrameworkCore.DbMigrations.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ctrl.EntityFrameworkCore.DbMigrations.Migrations
{
    [DbContext(typeof(CtrlMigrationsDbContext))]
    partial class CtrlMigrationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ctrl.Domain.Models.Entities.SystemArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArticleTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Contents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SeoDes")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SeoKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Sys_Article");
                });

            modelBuilder.Entity("Ctrl.Domain.Models.Entities.SystemExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientAddress")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ClientHost")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ExceptionType")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("HttpMethod")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("InnerException")
                        .HasColumnType("nvarchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(2048)")
                        .HasMaxLength(2048);

                    b.Property<string>("RequestData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestUrl")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Runtime")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("ServerHost")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("Sys_ExceptionLog");
                });

            modelBuilder.Entity("Ctrl.Domain.Models.Entities.SystemLoginLog", b =>
                {
                    b.Property<string>("LoginLogId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ClientHost")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IpAddressName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OsVersion")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ServerHost")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginLogId");

                    b.ToTable("Sys_LoginLog");
                });

            modelBuilder.Entity("Ctrl.Domain.Models.Entities.SystemOperateLog", b =>
                {
                    b.Property<string>("OperateLogId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("ActionExecutionTime")
                        .HasColumnType("decimal(18,7)");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ClientHost")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("CreateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateUserCode")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Describe")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("RequestContentLength")
                        .HasColumnType("int");

                    b.Property<string>("RequestData")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<string>("RequestType")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ResponseStatus")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<decimal>("ResultExecutionTime")
                        .HasColumnType("decimal(18,7)");

                    b.Property<string>("ServerHost")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("UrlReferrer")
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("OperateLogId");

                    b.ToTable("Sys_OperateLog");
                });

            modelBuilder.Entity("Ctrl.Domain.Models.Entities.SystemPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("PrivilegeAccess")
                        .HasColumnType("smallint")
                        .HasMaxLength(50);

                    b.Property<string>("PrivilegeAccessValue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<short>("PrivilegeMaster")
                        .HasColumnType("smallint");

                    b.Property<Guid>("PrivilegeMasterValue")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PrivilegeMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Sys_Permission");
                });

            modelBuilder.Entity("Ctrl.Domain.Models.Entities.SystemPermissionUser", b =>
                {
                    b.Property<int>("PrivilegeMaster")
                        .HasColumnType("int");

                    b.Property<string>("PrivilegeMasterUserId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PrivilegeMasterValue")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.ToTable("Sys_PermissionUser");
                });

            modelBuilder.Entity("Ctrl.Domain.Models.Entities.SystemUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("FirstVisitTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFreeze")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastVisitTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sys_User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("316ac0bc-8fb5-467b-a209-546414f7ea7b"),
                            Code = "admin",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 411, DateTimeKind.Local).AddTicks(6513),
                            ImgUrl = "/Files/2019/04/04-29/d9a7bd7d-030d-4a74-b6f2-6bb31cf9b10a.png",
                            IsAdmin = true,
                            IsFreeze = false,
                            Name = "admin",
                            Password = "S0JRR96eei0=",
                            Remark = "系统管理员"
                        });
                });

            modelBuilder.Entity("Ctrl.System.Models.Entities.SystemArticleType", b =>
                {
                    b.Property<Guid>("ArticleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(50);

                    b.Property<string>("SeoDes")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("SeoKey")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("SeoTitle")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<Guid?>("TenantId")
                        .HasColumnName("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ArticleTypeId");

                    b.ToTable("Sys_ArticleType");
                });

            modelBuilder.Entity("Ctrl.System.Models.Entities.SystemConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(50);

                    b.Property<string>("CopyRight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<Guid?>("TenantId")
                        .HasColumnName("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Sys_Config");
                });

            modelBuilder.Entity("Ctrl.System.Models.Entities.SystemDictionary", b =>
                {
                    b.Property<Guid>("DictionaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(50);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFreeze")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<Guid?>("TenantId")
                        .HasColumnName("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("DictionaryId");

                    b.ToTable("Sys_Dictionary");
                });

            modelBuilder.Entity("Ctrl.System.Models.Entities.SystemMenu", b =>
                {
                    b.Property<Guid>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<bool>("CanbeDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<bool>("IsFreeze")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowMenu")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<byte[]>("OpenType")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("OpenUrl")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("MenuId");

                    b.ToTable("Sys_Menu");

                    b.HasData(
                        new
                        {
                            MenuId = new Guid("fc239bef-8bfa-48a4-ad99-150a1b1a017e"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "Menu",
                            Icon = "fas fa-list",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "模块维护",
                            OpenUrl = "/SysManage/Menu/Index",
                            OrderNo = 0,
                            ParentId = new Guid("7c9c9976-336c-443a-8a16-88574e887905")
                        },
                        new
                        {
                            MenuId = new Guid("26d560a2-c68a-4796-afcd-29ddce64d1f8"),
                            Action = "",
                            Area = "",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "",
                            Icon = "far fa-sun",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "系统设置",
                            OpenUrl = "",
                            OrderNo = 0,
                            ParentId = new Guid("9d804188-dded-418f-99c4-c9ee145673fb")
                        },
                        new
                        {
                            MenuId = new Guid("52ff87fd-aa44-43e8-a8c2-2ed8be1d2511"),
                            Action = "ExceptionLog",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "Log",
                            Icon = "fas fa-bug",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "错误日志",
                            OpenUrl = "/SysManage/Log/ExceptionLog",
                            OrderNo = 0,
                            ParentId = new Guid("b75ce484-8d7a-469e-8661-565585d302e3")
                        },
                        new
                        {
                            MenuId = new Guid("40793482-245c-4a1c-8c58-351b6d1b2e7f"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "Role",
                            Icon = "fas fa-users",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "角色维护",
                            OpenUrl = "/SysManage/Role/Index",
                            OrderNo = 0,
                            ParentId = new Guid("65294c4a-6bc4-49e7-8169-ffa7d628a8f6")
                        },
                        new
                        {
                            MenuId = new Guid("6a1969b8-31ee-4bd7-9ca4-4375ddceba73"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "MenuButton",
                            Icon = "fas fa-cubes",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "按钮管理",
                            OpenUrl = "/SysManage/MenuButton/Index",
                            OrderNo = 0,
                            ParentId = new Guid("7c9c9976-336c-443a-8a16-88574e887905")
                        },
                        new
                        {
                            MenuId = new Guid("8ba0133b-3c19-4bca-a86d-527463ff4fd3"),
                            Action = "OperationLog",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "Log",
                            Icon = "fas fa-eye",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "操作日志",
                            OpenUrl = "/SysManage/Log/OperationLog",
                            OrderNo = 0,
                            ParentId = new Guid("b75ce484-8d7a-469e-8661-565585d302e3")
                        },
                        new
                        {
                            MenuId = new Guid("b75ce484-8d7a-469e-8661-565585d302e3"),
                            Action = "",
                            Area = "",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "",
                            Icon = "fas fa-paste",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "系统日志",
                            OpenUrl = "",
                            OrderNo = 0,
                            ParentId = new Guid("9d804188-dded-418f-99c4-c9ee145673fb")
                        },
                        new
                        {
                            MenuId = new Guid("93967f84-2598-4aca-9a50-5c4a7719820f"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "ArticleType",
                            Icon = "fas fa-th-list",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "文章类别",
                            OpenUrl = "/SysManage/ArticleType/Index",
                            OrderNo = 0,
                            ParentId = new Guid("2986d468-ffe7-4a52-ab24-a594f5f79f33")
                        },
                        new
                        {
                            MenuId = new Guid("8f9d406f-70f0-4a11-9380-616fe2395c9e"),
                            Action = "Index",
                            Area = "sysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "Pays",
                            Icon = "fab fa-apple-pay",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "支付方式",
                            OpenUrl = "/SysManage/Pays/Index",
                            OrderNo = 0,
                            ParentId = new Guid("9d804188-dded-418f-99c4-c9ee145673fb")
                        },
                        new
                        {
                            MenuId = new Guid("e0d226e9-6253-42c7-abbd-65111f73d406"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "Article",
                            Icon = "fas fa-align-justify",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "文章列表",
                            OpenUrl = "/SysManage/Article/Index",
                            OrderNo = 0,
                            ParentId = new Guid("2986d468-ffe7-4a52-ab24-a594f5f79f33")
                        },
                        new
                        {
                            MenuId = new Guid("271fade9-0e28-411b-ad92-7fc9a3b57990"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "LinkType",
                            Icon = "fas fa-external-link-alt",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "链接类型",
                            OpenUrl = "/SysManage/LinkType/Index",
                            OrderNo = 0,
                            ParentId = new Guid("517d48c3-8551-4d2d-8a0c-3f060077b236")
                        },
                        new
                        {
                            MenuId = new Guid("7c9c9976-336c-443a-8a16-88574e887905"),
                            Action = "",
                            Area = "",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "",
                            Icon = "fas fa-desktop",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "权限信息",
                            OpenUrl = "",
                            OrderNo = 0,
                            ParentId = new Guid("9d804188-dded-418f-99c4-c9ee145673fb")
                        },
                        new
                        {
                            MenuId = new Guid("89532468-de42-4f17-b681-8db668c5e50c"),
                            Action = "",
                            Area = "",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "",
                            Icon = "fas fa-handshake",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "敏捷开发",
                            OpenUrl = "",
                            OrderNo = 0,
                            ParentId = new Guid("9d804188-dded-418f-99c4-c9ee145673fb")
                        },
                        new
                        {
                            MenuId = new Guid("de921f49-b63d-47c8-95b1-93d13ecab2ca"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "Config",
                            Icon = "fas fa-cogs",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "系统配置",
                            OpenUrl = "/SysManage/Config/Index",
                            OrderNo = 0,
                            ParentId = new Guid("26d560a2-c68a-4796-afcd-29ddce64d1f8")
                        },
                        new
                        {
                            MenuId = new Guid("2986d468-ffe7-4a52-ab24-a594f5f79f33"),
                            Action = "",
                            Area = "",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "",
                            Icon = "fas fa-book-reader",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "文章管理",
                            OpenUrl = "",
                            OrderNo = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("af66d9a6-3567-4267-a7cc-a79982b53fd0"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "Dictionary",
                            Icon = "fas fa-book",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "字典管理",
                            OpenUrl = "/SysManage/Log/Login",
                            OrderNo = 0,
                            ParentId = new Guid("26d560a2-c68a-4796-afcd-29ddce64d1f8")
                        },
                        new
                        {
                            MenuId = new Guid("9d804188-dded-418f-99c4-c9ee145673fb"),
                            Action = "",
                            Area = "",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "",
                            Icon = "fas fa-cog",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "系统管理",
                            OpenUrl = "",
                            OrderNo = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            MenuId = new Guid("004e1aeb-5270-42cf-945c-dd7a1f277ced"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "User",
                            Icon = "fas fa-user",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "系统用户",
                            OpenUrl = "/SysManage/User/Index",
                            OrderNo = 0,
                            ParentId = new Guid("65294c4a-6bc4-49e7-8169-ffa7d628a8f6")
                        },
                        new
                        {
                            MenuId = new Guid("52453f3e-02e7-47d0-a5c8-fcaa5e26005d"),
                            Action = "Index",
                            Area = "SysManage",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "CodeGeneration",
                            Icon = "fas fa-code",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "代码生成",
                            OpenUrl = "/SysManage/CodeGeneration/Index",
                            OrderNo = 0,
                            ParentId = new Guid("89532468-de42-4f17-b681-8db668c5e50c")
                        },
                        new
                        {
                            MenuId = new Guid("65294c4a-6bc4-49e7-8169-ffa7d628a8f6"),
                            Action = "",
                            Area = "",
                            CanbeDelete = false,
                            Code = "",
                            Controller = "",
                            Icon = "fas fa-user",
                            IsFreeze = false,
                            IsShowMenu = true,
                            Name = "用户管理",
                            OpenUrl = "",
                            OrderNo = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Ctrl.System.Models.Entities.SystemMenuButton", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<string>("Script")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Sys_MenuButton");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3121ecb-e702-4df1-9a46-6cc4ef4f1771"),
                            Code = "xtgl-cdan-SaveMenuButton",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(6086),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("6a1969b8-31ee-4bd7-9ca4-4375ddceba73"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("895d1275-3a97-4e13-bd9c-bad1fee25b30"),
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9002),
                            Icon = "fas fa-edit",
                            MenuId = new Guid("6a1969b8-31ee-4bd7-9ca4-4375ddceba73"),
                            Name = "编辑",
                            OrderNo = 0,
                            Script = "btn_edit_box()"
                        },
                        new
                        {
                            Id = new Guid("74ea2be0-52af-457f-9d1b-10caeae7b0a9"),
                            Code = "xtgl-jswh-Chosen",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9064),
                            Icon = "fas fa-user-lock",
                            MenuId = new Guid("40793482-245c-4a1c-8c58-351b6d1b2e7f"),
                            Name = "模块权限",
                            OrderNo = 0,
                            Script = "menuPermission()"
                        },
                        new
                        {
                            Id = new Guid("dbd8d36b-336c-4243-a039-bf198dec985f"),
                            Code = "xtgl-jswh-ChosenButton",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9083),
                            Icon = "fas fa-user-minus",
                            MenuId = new Guid("40793482-245c-4a1c-8c58-351b6d1b2e7f"),
                            Name = "按钮权限",
                            OrderNo = 0,
                            Script = "buttonPermission()"
                        },
                        new
                        {
                            Id = new Guid("9eb747da-6e10-4847-9435-78315a50e7a7"),
                            Code = "xtgl-jswh-SaveRole",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9086),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("40793482-245c-4a1c-8c58-351b6d1b2e7f"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("2eb06b15-9106-4501-8e57-d0f95d1c0278"),
                            Code = "xtgl-xtyh-SaveUser",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9092),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("004e1aeb-5270-42cf-945c-dd7a1f277ced"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("94385e39-6177-451d-9f7f-7e3de680bf80"),
                            Code = "xtgl-mkwh-SaveMenu",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9096),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("fc239bef-8bfa-48a4-ad99-150a1b1a017e"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("a243eba3-2cf1-4ce8-94ba-b6e190f9af94"),
                            Code = "xtgl-mkwh-SaveMenu",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9100),
                            Icon = "fas fa-edit",
                            MenuId = new Guid("fc239bef-8bfa-48a4-ad99-150a1b1a017e"),
                            Name = "编辑",
                            OrderNo = 0,
                            Script = "btn_edit_box()"
                        },
                        new
                        {
                            Id = new Guid("053e4f24-7b39-4cba-b50f-b05207a3e392"),
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9103),
                            Icon = "fas fa-chart-pie",
                            MenuId = new Guid("d19e918c-0694-437e-b604-b989a5668695"),
                            Name = "数据分析",
                            OrderNo = 0,
                            Script = "btn_data_box()"
                        },
                        new
                        {
                            Id = new Guid("faa5eea4-1560-4a8a-9a2e-0a06b9004915"),
                            Code = "xtgl-zffs-SavePays",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9107),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("8f9d406f-70f0-4a11-9380-616fe2395c9e"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("50535c38-cb29-4cd5-ad09-6c7653e52e77"),
                            Code = "xtgl-wzlx-SaveArticleType",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9111),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("93967f84-2598-4aca-9a50-5c4a7719820f"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("151e9ee8-1292-4976-b060-98f105aac78d"),
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9117),
                            Icon = "fas fa-edit",
                            MenuId = new Guid("93967f84-2598-4aca-9a50-5c4a7719820f"),
                            Name = "编辑",
                            OrderNo = 0,
                            Script = "btn_edit_box()"
                        },
                        new
                        {
                            Id = new Guid("a5c44359-7a62-47df-90ff-a802260726e2"),
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9120),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("e0d226e9-6253-42c7-abbd-65111f73d406"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("67269800-8778-47d6-a116-40816d08c1b6"),
                            Code = "xtgl-wz-SaveArticle",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9124),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("e0d226e9-6253-42c7-abbd-65111f73d406"),
                            Name = "编辑",
                            OrderNo = 0,
                            Script = "btn_edit_box()"
                        },
                        new
                        {
                            Id = new Guid("db1f02d7-1d2d-4720-9279-ce97875282d8"),
                            Code = "xtgl-mkwh-DeleteMenu",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9127),
                            Icon = "far fa-trash-alt",
                            MenuId = new Guid("fc239bef-8bfa-48a4-ad99-150a1b1a017e"),
                            Name = "删除",
                            OrderNo = 0,
                            Script = "btn_edit_box()"
                        },
                        new
                        {
                            Id = new Guid("f4d9de8e-9bb0-49f3-a3e4-0811967b4c00"),
                            Code = "xtgl-zdgl-SaveSystemDictionary",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9130),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("af66d9a6-3567-4267-a7cc-a79982b53fd0"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("ca4fef20-fb65-4ee2-9cb7-dea0c4c594ed"),
                            Code = "xtgl-cdan-SaveMenuButton",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9134),
                            Icon = "fas fa-edit",
                            MenuId = new Guid("8f9d406f-70f0-4a11-9380-616fe2395c9e"),
                            Name = "编辑",
                            OrderNo = 0,
                            Script = "btn_edit_box()"
                        },
                        new
                        {
                            Id = new Guid("bb280590-731c-4201-9c1d-c197c85a3148"),
                            Code = "xtgl-zdgl-SaveSystemDictionary",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9137),
                            Icon = "fas fa-edit",
                            MenuId = new Guid("af66d9a6-3567-4267-a7cc-a79982b53fd0"),
                            Name = "编辑",
                            OrderNo = 0,
                            Script = "btn_edit_box()"
                        },
                        new
                        {
                            Id = new Guid("931bbf33-50a1-4bcc-99e2-b05df7fff15a"),
                            Code = "ljgl-ljlx-SaveSystemLinkType",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9141),
                            Icon = "fas fa-plus",
                            MenuId = new Guid("271fade9-0e28-411b-ad92-7fc9a3b57990"),
                            Name = "新增",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("5c299c4f-bb0d-48fc-9bb3-7391d6c92ed3"),
                            Code = "ljgl-ljlx-SaveSystemLinkType",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9146),
                            Icon = "fas fa-edit",
                            MenuId = new Guid("271fade9-0e28-411b-ad92-7fc9a3b57990"),
                            Name = "编辑",
                            OrderNo = 0,
                            Script = "btn_add_box()"
                        },
                        new
                        {
                            Id = new Guid("d52ba0a8-07d6-41fa-ab4a-8fc47b28a026"),
                            Code = "wzgl-wzlb-Delete",
                            CreateTime = new DateTime(2020, 3, 7, 12, 16, 15, 413, DateTimeKind.Local).AddTicks(9150),
                            Icon = "fas fa-trash-alt",
                            MenuId = new Guid("e0d226e9-6253-42c7-abbd-65111f73d406"),
                            Name = "删除",
                            OrderNo = 0,
                            Script = "btn_delete_box()"
                        });
                });

            modelBuilder.Entity("Ctrl.System.Models.Entities.SystemRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanbeDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<bool>("IsFreeze")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateUserName")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("RoleId");

                    b.ToTable("Sys_Role");
                });

            modelBuilder.Entity("Ctrl.System.Models.Entities.SystemSqlLog", b =>
                {
                    b.Property<string>("SqlLogId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateUserCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreateUserId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreateUserName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("ElapsedTime")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperateSql")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("SqlLogId");

                    b.ToTable("Sys_SqlLog");
                });
#pragma warning restore 612, 618
        }
    }
}
